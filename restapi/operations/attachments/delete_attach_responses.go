// Code generated by go-swagger; DO NOT EDIT.

package attachments

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/kraken-hpc/imageapi/models"
)

// DeleteAttachOKCode is the HTTP code returned for type DeleteAttachOK
const DeleteAttachOKCode int = 200

/*DeleteAttachOK Detach succeed

swagger:response deleteAttachOK
*/
type DeleteAttachOK struct {

	/*
	  In: Body
	*/
	Payload *models.Attach `json:"body,omitempty"`
}

// NewDeleteAttachOK creates DeleteAttachOK with default headers values
func NewDeleteAttachOK() *DeleteAttachOK {

	return &DeleteAttachOK{}
}

// WithPayload adds the payload to the delete attach o k response
func (o *DeleteAttachOK) WithPayload(payload *models.Attach) *DeleteAttachOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the delete attach o k response
func (o *DeleteAttachOK) SetPayload(payload *models.Attach) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *DeleteAttachOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

/*DeleteAttachDefault Detach failed

swagger:response deleteAttachDefault
*/
type DeleteAttachDefault struct {
	_statusCode int

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewDeleteAttachDefault creates DeleteAttachDefault with default headers values
func NewDeleteAttachDefault(code int) *DeleteAttachDefault {
	if code <= 0 {
		code = 500
	}

	return &DeleteAttachDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the delete attach default response
func (o *DeleteAttachDefault) WithStatusCode(code int) *DeleteAttachDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the delete attach default response
func (o *DeleteAttachDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the delete attach default response
func (o *DeleteAttachDefault) WithPayload(payload *models.Error) *DeleteAttachDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the delete attach default response
func (o *DeleteAttachDefault) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *DeleteAttachDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
